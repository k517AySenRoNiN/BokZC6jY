// 代码生成时间: 2025-08-22 16:16:12
{
    "using System;",
    "using Microsoft.AspNetCore.Mvc;",
    "using System.Collections.Generic;",
    "using System.Threading.Tasks;",
    "using System.Net.Http;",
    "using Newtonsoft.Json;",
    
    "/// <summary>",
    "/// Controller for generating interactive charts.",
    "/// </summary>",
    "[ApiController]",
    "[Route("[controller]")]",
    "public class InteractiveChartController : ControllerBase",
    "{",
    "    private readonly IHttpClientFactory _httpClientFactory;",
    
    "    /// <summary>",
    "    /// Initializes a new instance of the InteractiveChartController class.",
    "    /// </summary>",
    "    /// <param name="httpClientFactory">The HTTP client factory.</param>",
    "    public InteractiveChartController(IHttpClientFactory httpClientFactory)",
    "    {",
    "        _httpClientFactory = httpClientFactory ?? throw new ArgumentNullException(nameof(httpClientFactory));",
    "    }",
    
    "    /// <summary>",
    "    /// GET method to generate an interactive chart.",
    "    /// </summary>",
    "    /// <returns>A JSON object containing the chart data.</returns>",
    "    [HttpGet]",
    "    public async Task<IActionResult> GetChartData()",
    "    {",
    "        try",
    "        {",
    "            // Sample data source URL, replace with actual URL",
    "            string dataSourceUrl = "https://api.example.com/chartdata";",
    
    "            using (var httpClient = _httpClientFactory.CreateClient())",
    "            {",
    "                var response = await httpClient.GetAsync(dataSourceUrl);",
    "                if (!response.IsSuccessStatusCode)",
    "                {",
    "                    return StatusCode((int)response.StatusCode, "Failed to retrieve chart data.");",
    "                }",
    
    "                string content = await response.Content.ReadAsStringAsync();",
    "                var chartData = JsonConvert.DeserializeObject<Dictionary<string, object>>(content);",
    "                return Ok(chartData);",
    "            }",
    "        }",
    "        catch (Exception ex)",
    "        {",
    "            // Log the exception and return a 500 status code with the error message.",
    "            return StatusCode(500, $"An error occurred: {ex.Message}");",
    "        }",
    "    }",
    "}
}